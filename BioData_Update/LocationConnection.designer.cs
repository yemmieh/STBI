#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BioData_Update
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KnowledgeBase")]
	public partial class LocationConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSTATE_LISTING(STATE_LISTING instance);
    partial void UpdateSTATE_LISTING(STATE_LISTING instance);
    partial void DeleteSTATE_LISTING(STATE_LISTING instance);
    partial void InsertLGA_LISTING(LGA_LISTING instance);
    partial void UpdateLGA_LISTING(LGA_LISTING instance);
    partial void DeleteLGA_LISTING(LGA_LISTING instance);
    #endregion
		
		public LocationConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KnowledgeBaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LocationConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocationConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocationConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocationConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<STATE_LISTING> STATE_LISTINGs
		{
			get
			{
				return this.GetTable<STATE_LISTING>();
			}
		}
		
		public System.Data.Linq.Table<LGA_LISTING> LGA_LISTINGs
		{
			get
			{
				return this.GetTable<LGA_LISTING>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRY_LISTING> COUNTRY_LISTINGs
		{
			get
			{
				return this.GetTable<COUNTRY_LISTING>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATE_LISTING")]
	public partial class STATE_LISTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _STATE_ID;
		
		private string _STATE_NAME;
		
		private string _COUNTRY;
		
		private string _COUNTRY_CODE;
		
		private System.DateTime _DATECREATED;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTATE_IDChanging(string value);
    partial void OnSTATE_IDChanged();
    partial void OnSTATE_NAMEChanging(string value);
    partial void OnSTATE_NAMEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnCOUNTRY_CODEChanging(string value);
    partial void OnCOUNTRY_CODEChanged();
    partial void OnDATECREATEDChanging(System.DateTime value);
    partial void OnDATECREATEDChanged();
    #endregion
		
		public STATE_LISTING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_ID", DbType="VarChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string STATE_ID
		{
			get
			{
				return this._STATE_ID;
			}
			set
			{
				if ((this._STATE_ID != value))
				{
					this.OnSTATE_IDChanging(value);
					this.SendPropertyChanging();
					this._STATE_ID = value;
					this.SendPropertyChanged("STATE_ID");
					this.OnSTATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STATE_NAME
		{
			get
			{
				return this._STATE_NAME;
			}
			set
			{
				if ((this._STATE_NAME != value))
				{
					this.OnSTATE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._STATE_NAME = value;
					this.SendPropertyChanged("STATE_NAME");
					this.OnSTATE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_CODE", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string COUNTRY_CODE
		{
			get
			{
				return this._COUNTRY_CODE;
			}
			set
			{
				if ((this._COUNTRY_CODE != value))
				{
					this.OnCOUNTRY_CODEChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY_CODE = value;
					this.SendPropertyChanged("COUNTRY_CODE");
					this.OnCOUNTRY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATECREATED", DbType="DateTime NOT NULL")]
		public System.DateTime DATECREATED
		{
			get
			{
				return this._DATECREATED;
			}
			set
			{
				if ((this._DATECREATED != value))
				{
					this.OnDATECREATEDChanging(value);
					this.SendPropertyChanging();
					this._DATECREATED = value;
					this.SendPropertyChanged("DATECREATED");
					this.OnDATECREATEDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LGA_LISTING")]
	public partial class LGA_LISTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LGA_ID;
		
		private string _LGA_NAME;
		
		private string _STATE;
		
		private string _STATE_CODE;
		
		private string _COUNTRY;
		
		private string _COUNTRY_CODE;
		
		private System.DateTime _DATECREATED;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLGA_IDChanging(int value);
    partial void OnLGA_IDChanged();
    partial void OnLGA_NAMEChanging(string value);
    partial void OnLGA_NAMEChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnSTATE_CODEChanging(string value);
    partial void OnSTATE_CODEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnCOUNTRY_CODEChanging(string value);
    partial void OnCOUNTRY_CODEChanged();
    partial void OnDATECREATEDChanging(System.DateTime value);
    partial void OnDATECREATEDChanged();
    #endregion
		
		public LGA_LISTING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LGA_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LGA_ID
		{
			get
			{
				return this._LGA_ID;
			}
			set
			{
				if ((this._LGA_ID != value))
				{
					this.OnLGA_IDChanging(value);
					this.SendPropertyChanging();
					this._LGA_ID = value;
					this.SendPropertyChanged("LGA_ID");
					this.OnLGA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LGA_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LGA_NAME
		{
			get
			{
				return this._LGA_NAME;
			}
			set
			{
				if ((this._LGA_NAME != value))
				{
					this.OnLGA_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LGA_NAME = value;
					this.SendPropertyChanged("LGA_NAME");
					this.OnLGA_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_CODE", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string STATE_CODE
		{
			get
			{
				return this._STATE_CODE;
			}
			set
			{
				if ((this._STATE_CODE != value))
				{
					this.OnSTATE_CODEChanging(value);
					this.SendPropertyChanging();
					this._STATE_CODE = value;
					this.SendPropertyChanged("STATE_CODE");
					this.OnSTATE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_CODE", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string COUNTRY_CODE
		{
			get
			{
				return this._COUNTRY_CODE;
			}
			set
			{
				if ((this._COUNTRY_CODE != value))
				{
					this.OnCOUNTRY_CODEChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY_CODE = value;
					this.SendPropertyChanged("COUNTRY_CODE");
					this.OnCOUNTRY_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATECREATED", DbType="DateTime NOT NULL")]
		public System.DateTime DATECREATED
		{
			get
			{
				return this._DATECREATED;
			}
			set
			{
				if ((this._DATECREATED != value))
				{
					this.OnDATECREATEDChanging(value);
					this.SendPropertyChanging();
					this._DATECREATED = value;
					this.SendPropertyChanged("DATECREATED");
					this.OnDATECREATEDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTRY_LISTING")]
	public partial class COUNTRY_LISTING
	{
		
		private string _COUNTRY_NAME;
		
		private string _COUNTRY_CODE_ISO3166_1_Alpha_2;
		
		private string _COUNTRY_CODE_ISO3166_1_Alpha_3;
		
		private System.Nullable<int> _COUNTRY_CODE_ISO3166_1_NUMERIC;
		
		private string _COUNTRY_DIAL_CODE;
		
		private string _CAPITAL;
		
		private string _COUNTRY_CONTINENT;
		
		private string _CONTINENT_CODE;
		
		private string _LANGUAGES;
		
		private string _TOP_LEVEL_DOMAIN;
		
		private System.Nullable<System.DateTime> _DATECREATED;
		
		public COUNTRY_LISTING()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_NAME", DbType="VarChar(100)")]
		public string COUNTRY_NAME
		{
			get
			{
				return this._COUNTRY_NAME;
			}
			set
			{
				if ((this._COUNTRY_NAME != value))
				{
					this._COUNTRY_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_CODE_ISO3166_1_Alpha_2", DbType="VarChar(2)")]
		public string COUNTRY_CODE_ISO3166_1_Alpha_2
		{
			get
			{
				return this._COUNTRY_CODE_ISO3166_1_Alpha_2;
			}
			set
			{
				if ((this._COUNTRY_CODE_ISO3166_1_Alpha_2 != value))
				{
					this._COUNTRY_CODE_ISO3166_1_Alpha_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_CODE_ISO3166_1_Alpha_3", DbType="VarChar(3)")]
		public string COUNTRY_CODE_ISO3166_1_Alpha_3
		{
			get
			{
				return this._COUNTRY_CODE_ISO3166_1_Alpha_3;
			}
			set
			{
				if ((this._COUNTRY_CODE_ISO3166_1_Alpha_3 != value))
				{
					this._COUNTRY_CODE_ISO3166_1_Alpha_3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_CODE_ISO3166_1_NUMERIC", DbType="Int")]
		public System.Nullable<int> COUNTRY_CODE_ISO3166_1_NUMERIC
		{
			get
			{
				return this._COUNTRY_CODE_ISO3166_1_NUMERIC;
			}
			set
			{
				if ((this._COUNTRY_CODE_ISO3166_1_NUMERIC != value))
				{
					this._COUNTRY_CODE_ISO3166_1_NUMERIC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_DIAL_CODE", DbType="VarChar(10)")]
		public string COUNTRY_DIAL_CODE
		{
			get
			{
				return this._COUNTRY_DIAL_CODE;
			}
			set
			{
				if ((this._COUNTRY_DIAL_CODE != value))
				{
					this._COUNTRY_DIAL_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAPITAL", DbType="VarChar(100)")]
		public string CAPITAL
		{
			get
			{
				return this._CAPITAL;
			}
			set
			{
				if ((this._CAPITAL != value))
				{
					this._CAPITAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY_CONTINENT", DbType="VarChar(100)")]
		public string COUNTRY_CONTINENT
		{
			get
			{
				return this._COUNTRY_CONTINENT;
			}
			set
			{
				if ((this._COUNTRY_CONTINENT != value))
				{
					this._COUNTRY_CONTINENT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTINENT_CODE", DbType="Char(4)")]
		public string CONTINENT_CODE
		{
			get
			{
				return this._CONTINENT_CODE;
			}
			set
			{
				if ((this._CONTINENT_CODE != value))
				{
					this._CONTINENT_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANGUAGES", DbType="VarChar(100)")]
		public string LANGUAGES
		{
			get
			{
				return this._LANGUAGES;
			}
			set
			{
				if ((this._LANGUAGES != value))
				{
					this._LANGUAGES = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOP_LEVEL_DOMAIN", DbType="VarChar(100)")]
		public string TOP_LEVEL_DOMAIN
		{
			get
			{
				return this._TOP_LEVEL_DOMAIN;
			}
			set
			{
				if ((this._TOP_LEVEL_DOMAIN != value))
				{
					this._TOP_LEVEL_DOMAIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATECREATED", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATECREATED
		{
			get
			{
				return this._DATECREATED;
			}
			set
			{
				if ((this._DATECREATED != value))
				{
					this._DATECREATED = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
